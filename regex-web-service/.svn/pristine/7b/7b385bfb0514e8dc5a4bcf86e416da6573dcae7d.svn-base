<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.regex.web.dao.info.ExpertAnswerDAO">
    <!-- ExpertAnswerDTO的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_ExpertAnswerDTO_Map" type="com.regex.web.common.dto.info.ExpertAnswerDTO">
        <id column="id" property="id" />
        <result column="update_time" property="updateTime" />
        <result column="create_time" property="createTime" />
        <result column="name" property="name" />
        <result column="is_del" property="isDel" />
        <result column="reply_type" property="replyType" />
        <result column="type" property="type" />
        <result column="content" property="content" />
        <result column="is_top" property="isTop" />
        <result column="read_count" property="readCount" />
    </resultMap>

    <!-- 数据库中表名为:t_expert_answer的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="t_expert_answer_Column">
        t_expert_answer.id as id
        ,t_expert_answer.update_time as update_time
        ,t_expert_answer.create_time as create_time
        ,t_expert_answer.name as name
        ,t_expert_answer.is_del as is_del
        ,t_expert_answer.reply_type as reply_type
        ,t_expert_answer.type as type
        ,t_expert_answer.content as content
        ,t_expert_answer.is_top as is_top
        ,t_expert_answer.read_count as read_count
    </sql>

    <!--获得类名为:ExpertAnswerDTO对应的数据库表的数据总行数 -->
    <select id="getExpertAnswerDTORowCount" resultType="java.lang.Long">
        select count(id) from t_expert_answer
    </select>
    <!-- 获得类名为:ExpertAnswerDTO对应数据库中表的数据集合 -->
    <select id="selectExpertAnswerDTO" resultMap="result_ExpertAnswerDTO_Map">
        select 
        <include refid="t_expert_answer_Column" /> 
        from t_expert_answer
    </select> 

    <!-- 获得一个ExpertAnswerDTO对象,以参数ExpertAnswerDTO对象中不为空的属性作为条件进行查询-->
    <select id="selectExpertAnswerDTOByObj" parameterType="com.regex.web.common.dto.info.ExpertAnswerDTO" resultMap="result_ExpertAnswerDTO_Map">
        select 
            <include refid="t_expert_answer_Column" /> 
        from t_expert_answer
        <where>
            <if test="readCount != null "> and t_expert_answer.read_count = #{readCount}</if>
            <if test="isTop != null "> and t_expert_answer.is_top = #{isTop}</if>
            <if test="content != null "> and t_expert_answer.content = #{content}</if>
            <if test="type != null "> and t_expert_answer.type = #{type}</if>
            <if test="replyType != null "> and t_expert_answer.reply_type = #{replyType}</if>
            <if test="isDel != null "> and t_expert_answer.is_del = #{isDel}</if>
            <if test="name != null "> and t_expert_answer.name = #{name}</if>
            <if test="createTime != null "> and t_expert_answer.create_time = #{createTime}</if>
            <if test="updateTime != null "> and t_expert_answer.update_time = #{updateTime}</if>
            <if test="id != null "> and t_expert_answer.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过ExpertAnswerDTO的id获得对应数据库中表的数据对象-->
    <select id="selectExpertAnswerDTOById" parameterType="java.lang.Long" resultMap="result_ExpertAnswerDTO_Map">
        select 
            <include refid="t_expert_answer_Column" /> 
        from t_expert_answer
        where t_expert_answer.id = #{id}
    </select> 

    <!-- 将ExpertAnswerDTO插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertExpertAnswerDTO" parameterType="com.regex.web.common.dto.info.ExpertAnswerDTO">
        insert into t_expert_answer(id,update_time,create_time,name,is_del,reply_type,type,content,is_top,read_count) 
        values(#{id},#{updateTime},#{createTime},#{name},#{isDel},#{replyType},#{type},#{content},#{isTop},#{readCount})
    </insert>

    <!-- 将ExpertAnswerDTO中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyExpertAnswerDTO" parameterType="com.regex.web.common.dto.info.ExpertAnswerDTO">
        insert into t_expert_answer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createTime != null">create_time,</if>
            <if test="name != null">name,</if>
            <if test="isDel != null">is_del,</if>
            <if test="replyType != null">reply_type,</if>
            <if test="type != null">type,</if>
            <if test="content != null">content,</if>
            <if test="isTop != null">is_top,</if>
            <if test="readCount != null">read_count,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="updateTime != null"> #{updateTime},</if>
            <if test="createTime != null"> #{createTime},</if>
            <if test="name != null"> #{name},</if>
            <if test="isDel != null"> #{isDel},</if>
            <if test="replyType != null"> #{replyType},</if>
            <if test="type != null"> #{type},</if>
            <if test="content != null"> #{content},</if>
            <if test="isTop != null"> #{isTop},</if>
            <if test="readCount != null"> #{readCount},</if>
        </trim>
    </insert>

    <!-- 将ExpertAnswerDTO批量插入到对应数据库的表中-->
    <insert id="insertExpertAnswerDTOByBatch" parameterType="ArrayList">
        insert into t_expert_answer(id,update_time,create_time,name,is_del,reply_type,type,content,is_top,read_count) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},#{item.updateTime},#{item.createTime},#{item.name},#{item.isDel},#{item.replyType},#{item.type},#{item.content},#{item.isTop},#{item.readCount})
        </foreach>
    </insert>

    <!-- 通过ExpertAnswerDTO的id将数据库表中对应的数据删除-->
    <delete id="deleteExpertAnswerDTOById" parameterType="java.lang.Long">
        delete from t_expert_answer
        where id = #{id}
    </delete>

    <!-- 通过ExpertAnswerDTO的id将ExpertAnswerDTO的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateExpertAnswerDTOById" parameterType="com.regex.web.common.dto.info.ExpertAnswerDTO">
        update t_expert_answer set
            update_time=#{updateTime}
            ,create_time=#{createTime}
            ,name=#{name}
            ,is_del=#{isDel}
            ,reply_type=#{replyType}
            ,type=#{type}
            ,content=#{content}
            ,is_top=#{isTop}
            ,read_count=#{readCount}
        where id=#{id}
    </update>

    <!-- 通过ExpertAnswerDTO的id将ExpertAnswerDTO中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyExpertAnswerDTOById" parameterType="com.regex.web.common.dto.info.ExpertAnswerDTO">
        update t_expert_answer
        <set>
            <if test="updateTime != null">
                update_time=#{updateTime},
            </if>
            <if test="createTime != null">
                create_time=#{createTime},
            </if>
            <if test="name != null">
                name=#{name},
            </if>
            <if test="isDel != null">
                is_del=#{isDel},
            </if>
            <if test="replyType != null">
                reply_type=#{replyType},
            </if>
            <if test="type != null">
                type=#{type},
            </if>
            <if test="content != null">
                content=#{content},
            </if>
            <if test="isTop != null">
                is_top=#{isTop},
            </if>
            <if test="readCount != null">
                read_count=#{readCount},
            </if>
        </set>
        where id=#{id}
    </update>

</mapper>