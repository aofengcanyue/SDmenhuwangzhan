<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.regex.web.dao.info.IndustryInfoDAO">
    <!-- IndustryInfoDTO的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_IndustryInfoDTO_Map" type="com.regex.web.common.dto.info.IndustryInfoDTO">
        <id column="INDUSTRY_ID" property="industryId" />
        <result column="INDUSTRY_NAME" property="industryName" />
        <result column="CLASSIFY_ID" property="classifyId" />
        <result column="INDUSTRY_CODE" property="industryCode" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:INDUSTRY_INFO的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="INDUSTRY_INFO_Column">
        INDUSTRY_INFO.INDUSTRY_ID as INDUSTRY_ID
        ,INDUSTRY_INFO.INDUSTRY_NAME as INDUSTRY_NAME
        ,INDUSTRY_INFO.CLASSIFY_ID as CLASSIFY_ID
        ,INDUSTRY_INFO.INDUSTRY_CODE as INDUSTRY_CODE
    </sql>

    <!--获得类名为:IndustryInfoDTO对应的数据库表的数据总行数 -->
    <select id="getIndustryInfoDTORowCount" parameterType="com.regex.web.common.Assist" resultType="java.lang.Long">
        select count(INDUSTRY_ID) from INDUSTRY_INFO
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:IndustryInfoDTO对应数据库中表的数据集合 -->
    <select id="selectIndustryInfoDTO" parameterType="com.regex.web.common.Assist"  resultMap="result_IndustryInfoDTO_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="INDUSTRY_INFO_Column" /> 
            </otherwise>
        </choose>
        from INDUSTRY_INFO
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT INDUSTRY_ID as primary_key FROM INDUSTRY_INFO
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=INDUSTRY_INFO.INDUSTRY_ID
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个IndustryInfoDTO对象,以参数IndustryInfoDTO对象中不为空的属性作为条件进行查询-->
    <select id="selectIndustryInfoDTOByObj" parameterType="com.regex.web.common.dto.info.IndustryInfoDTO" resultMap="result_IndustryInfoDTO_Map">
        select 
            <include refid="INDUSTRY_INFO_Column" /> 
        from INDUSTRY_INFO
        <where>
            <if test="industryCode != null "> and INDUSTRY_INFO.INDUSTRY_CODE = #{industryCode}</if>
            <if test="classifyId != null "> and INDUSTRY_INFO.CLASSIFY_ID = #{classifyId}</if>
            <if test="industryName != null "> and INDUSTRY_INFO.INDUSTRY_NAME = #{industryName}</if>
            <if test="industryId != null "> and INDUSTRY_INFO.INDUSTRY_ID = #{industryId}</if>
        </where>
    </select> 

    <!-- 通过IndustryInfoDTO的id获得对应数据库中表的数据对象-->
    <select id="selectIndustryInfoDTOById" parameterType="java.lang.String" resultMap="result_IndustryInfoDTO_Map">
        select 
            <include refid="INDUSTRY_INFO_Column" /> 
        from INDUSTRY_INFO
        where INDUSTRY_INFO.INDUSTRY_ID = #{id}
    </select> 

    <!-- 将IndustryInfoDTO插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertIndustryInfoDTO" parameterType="com.regex.web.common.dto.info.IndustryInfoDTO">
        insert into INDUSTRY_INFO(INDUSTRY_ID,INDUSTRY_NAME,CLASSIFY_ID,INDUSTRY_CODE) 
        values(#{industryId},#{industryName},#{classifyId},#{industryCode})
    </insert>

    <!-- 将IndustryInfoDTO中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyIndustryInfoDTO" parameterType="com.regex.web.common.dto.info.IndustryInfoDTO">
        insert into INDUSTRY_INFO
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="industryId != null">INDUSTRY_ID,</if>
            <if test="industryName != null">INDUSTRY_NAME,</if>
            <if test="classifyId != null">CLASSIFY_ID,</if>
            <if test="industryCode != null">INDUSTRY_CODE,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="industryId != null"> #{industryId},</if>
            <if test="industryName != null"> #{industryName},</if>
            <if test="classifyId != null"> #{classifyId},</if>
            <if test="industryCode != null"> #{industryCode},</if>
        </trim>
    </insert>

    <!-- 将IndustryInfoDTO批量插入到对应数据库的表中-->
    <insert id="insertIndustryInfoDTOByBatch" parameterType="ArrayList">
        insert into INDUSTRY_INFO(INDUSTRY_ID,INDUSTRY_NAME,CLASSIFY_ID,INDUSTRY_CODE) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.industryId},#{item.industryName},#{item.classifyId},#{item.industryCode})
        </foreach>
    </insert>

    <!-- 通过IndustryInfoDTO的id将数据库表中对应的数据删除-->
    <delete id="deleteIndustryInfoDTOById" parameterType="java.lang.String">
        delete from INDUSTRY_INFO
        where INDUSTRY_ID = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将IndustryInfoDTO对应的数据库表的数据删除-->
    <delete id="deleteIndustryInfoDTO" parameterType="com.regex.web.common.Assist">
        delete from INDUSTRY_INFO
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过IndustryInfoDTO的id将IndustryInfoDTO的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateIndustryInfoDTOById" parameterType="com.regex.web.common.dto.info.IndustryInfoDTO">
        update INDUSTRY_INFO set
            INDUSTRY_NAME=#{industryName}
            ,CLASSIFY_ID=#{classifyId}
            ,INDUSTRY_CODE=#{industryCode}
        where INDUSTRY_ID=#{industryId}
    </update>

    <!-- 通过IndustryInfoDTO的id将IndustryInfoDTO中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyIndustryInfoDTOById" parameterType="com.regex.web.common.dto.info.IndustryInfoDTO">
        update INDUSTRY_INFO
        <set>
            <if test="industryName != null">
                INDUSTRY_NAME=#{industryName},
            </if>
            <if test="classifyId != null">
                CLASSIFY_ID=#{classifyId},
            </if>
            <if test="industryCode != null">
                INDUSTRY_CODE=#{industryCode},
            </if>
        </set>
        where INDUSTRY_ID=#{industryId}
    </update>

    <!-- 通过辅助工具Assist中的条件将IndustryInfoDTO中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateIndustryInfoDTO" parameterType="map">
        update INDUSTRY_INFO
        <set>
                INDUSTRY_ID=#{enti.industryId},
                INDUSTRY_NAME=#{enti.industryName},
                CLASSIFY_ID=#{enti.classifyId},
                INDUSTRY_CODE=#{enti.industryCode},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将IndustryInfoDTO中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyIndustryInfoDTO" parameterType="map">
        update INDUSTRY_INFO
        <set>
            <if test="enti.industryId != null">
                INDUSTRY_ID=#{enti.industryId},
            </if>
            <if test="enti.industryName != null">
                INDUSTRY_NAME=#{enti.industryName},
            </if>
            <if test="enti.classifyId != null">
                CLASSIFY_ID=#{enti.classifyId},
            </if>
            <if test="enti.industryCode != null">
                INDUSTRY_CODE=#{enti.industryCode},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>