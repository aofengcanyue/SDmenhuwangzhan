<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.regex.web.dao.info.ExpertAnswerDAO">
    <!-- ExpertAnswerDTO的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_ExpertAnswerDTO_Map" type="com.regex.web.common.dto.info.ExpertAnswerDTO">
        <id column="id" property="id" />
        <result column="update_time" property="updateTime" />
        <result column="create_time" property="createTime" />
        <result column="user_id" property="userId" />
        <result column="audit" property="audit" />
        <result column="is_del" property="isDel" />
        <result column="title" property="title" />
        <result column="type" property="type" />
        <result column="expert_id" property="expertId" />
        <result column="is_top" property="isTop" />
        <result column="read_count" property="readCount" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:t_expert_answer的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="t_expert_answer_Column">
        t_expert_answer.id as id
        ,t_expert_answer.update_time as update_time
        ,t_expert_answer.create_time as create_time
        ,t_expert_answer.user_id as user_id
        ,t_expert_answer.audit as audit
        ,t_expert_answer.is_del as is_del
        ,t_expert_answer.title as title
        ,t_expert_answer.type as type
        ,t_expert_answer.expert_id as expert_id
        ,t_expert_answer.is_top as is_top
        ,t_expert_answer.read_count as read_count
    </sql>

    <!--获得类名为:ExpertAnswerDTO对应的数据库表的数据总行数 -->
    <select id="getExpertAnswerDTORowCount" parameterType="com.regex.web.common.Assist" resultType="java.lang.Long">
        select count(id) from t_expert_answer
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:ExpertAnswerDTO对应数据库中表的数据集合 -->
    <select id="selectExpertAnswerDTO" parameterType="com.regex.web.common.Assist"  resultMap="result_ExpertAnswerDTO_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="t_expert_answer_Column" /> 
            </otherwise>
        </choose>
        from t_expert_answer
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM t_expert_answer
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=t_expert_answer.id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个ExpertAnswerDTO对象,以参数ExpertAnswerDTO对象中不为空的属性作为条件进行查询-->
    <select id="selectExpertAnswerDTOByObj" parameterType="com.regex.web.common.dto.info.ExpertAnswerDTO" resultMap="result_ExpertAnswerDTO_Map">
        select 
            <include refid="t_expert_answer_Column" /> 
        from t_expert_answer
        <where>
            <if test="readCount != null "> and t_expert_answer.read_count = #{readCount}</if>
            <if test="isTop != null "> and t_expert_answer.is_top = #{isTop}</if>
            <if test="expertId != null "> and t_expert_answer.expert_id = #{expertId}</if>
            <if test="type != null "> and t_expert_answer.type = #{type}</if>
            <if test="title != null "> and t_expert_answer.title = #{title}</if>
            <if test="isDel != null "> and t_expert_answer.is_del = #{isDel}</if>
            <if test="audit != null "> and t_expert_answer.audit = #{audit}</if>
            <if test="userId != null "> and t_expert_answer.user_id = #{userId}</if>
            <if test="createTime != null "> and t_expert_answer.create_time = #{createTime}</if>
            <if test="updateTime != null "> and t_expert_answer.update_time = #{updateTime}</if>
            <if test="id != null "> and t_expert_answer.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过ExpertAnswerDTO的id获得对应数据库中表的数据对象-->
    <select id="selectExpertAnswerDTOById" parameterType="java.lang.Long" resultMap="result_ExpertAnswerDTO_Map">
        select 
            <include refid="t_expert_answer_Column" /> 
        from t_expert_answer
        where t_expert_answer.id = #{id}
    </select> 

    <!-- 将ExpertAnswerDTO插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertExpertAnswerDTO" parameterType="com.regex.web.common.dto.info.ExpertAnswerDTO">
        insert into t_expert_answer(id,update_time,create_time,user_id,audit,is_del,title,type,expert_id,is_top,read_count) 
        values(#{id},#{updateTime},#{createTime},#{userId},#{audit},#{isDel},#{title},#{type},#{expertId},#{isTop},#{readCount})
    </insert>

    <!-- 将ExpertAnswerDTO中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyExpertAnswerDTO" parameterType="com.regex.web.common.dto.info.ExpertAnswerDTO">
        insert into t_expert_answer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createTime != null">create_time,</if>
            <if test="userId != null">user_id,</if>
            <if test="audit != null">audit,</if>
            <if test="isDel != null">is_del,</if>
            <if test="title != null">title,</if>
            <if test="type != null">type,</if>
            <if test="expertId != null">expert_id,</if>
            <if test="isTop != null">is_top,</if>
            <if test="readCount != null">read_count,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="updateTime != null"> #{updateTime},</if>
            <if test="createTime != null"> #{createTime},</if>
            <if test="userId != null"> #{userId},</if>
            <if test="audit != null"> #{audit},</if>
            <if test="isDel != null"> #{isDel},</if>
            <if test="title != null"> #{title},</if>
            <if test="type != null"> #{type},</if>
            <if test="expertId != null"> #{expertId},</if>
            <if test="isTop != null"> #{isTop},</if>
            <if test="readCount != null"> #{readCount},</if>
        </trim>
    </insert>

    <!-- 将ExpertAnswerDTO批量插入到对应数据库的表中-->
    <insert id="insertExpertAnswerDTOByBatch" parameterType="ArrayList">
        insert into t_expert_answer(id,update_time,create_time,user_id,audit,is_del,title,type,expert_id,is_top,read_count) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},#{item.updateTime},#{item.createTime},#{item.userId},#{item.audit},#{item.isDel},#{item.title},#{item.type},#{item.expertId},#{item.isTop},#{item.readCount})
        </foreach>
    </insert>

    <!-- 通过ExpertAnswerDTO的id将数据库表中对应的数据删除-->
    <delete id="deleteExpertAnswerDTOById" parameterType="java.lang.Long">
        delete from t_expert_answer
        where id = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将ExpertAnswerDTO对应的数据库表的数据删除-->
    <delete id="deleteExpertAnswerDTO" parameterType="com.regex.web.common.Assist">
        delete from t_expert_answer
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过ExpertAnswerDTO的id将ExpertAnswerDTO的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateExpertAnswerDTOById" parameterType="com.regex.web.common.dto.info.ExpertAnswerDTO">
        update t_expert_answer set
            update_time=#{updateTime}
            ,create_time=#{createTime}
            ,user_id=#{userId}
            ,audit=#{audit}
            ,is_del=#{isDel}
            ,title=#{title}
            ,type=#{type}
            ,expert_id=#{expertId}
            ,is_top=#{isTop}
            ,read_count=#{readCount}
        where id=#{id}
    </update>

    <!-- 通过ExpertAnswerDTO的id将ExpertAnswerDTO中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyExpertAnswerDTOById" parameterType="com.regex.web.common.dto.info.ExpertAnswerDTO">
        update t_expert_answer
        <set>
            <if test="updateTime != null">
                update_time=#{updateTime},
            </if>
            <if test="createTime != null">
                create_time=#{createTime},
            </if>
            <if test="userId != null">
                user_id=#{userId},
            </if>
            <if test="audit != null">
                audit=#{audit},
            </if>
            <if test="isDel != null">
                is_del=#{isDel},
            </if>
            <if test="title != null">
                title=#{title},
            </if>
            <if test="type != null">
                type=#{type},
            </if>
            <if test="expertId != null">
                expert_id=#{expertId},
            </if>
            <if test="isTop != null">
                is_top=#{isTop},
            </if>
            <if test="readCount != null">
                read_count=#{readCount},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将ExpertAnswerDTO中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateExpertAnswerDTO" parameterType="map">
        update t_expert_answer
        <set>
                id=#{enti.id},
                update_time=#{enti.updateTime},
                create_time=#{enti.createTime},
                user_id=#{enti.userId},
                audit=#{enti.audit},
                is_del=#{enti.isDel},
                title=#{enti.title},
                type=#{enti.type},
                expert_id=#{enti.expertId},
                is_top=#{enti.isTop},
                read_count=#{enti.readCount},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将ExpertAnswerDTO中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyExpertAnswerDTO" parameterType="map">
        update t_expert_answer
        <set>
            <if test="enti.id != null">
                id=#{enti.id},
            </if>
            <if test="enti.updateTime != null">
                update_time=#{enti.updateTime},
            </if>
            <if test="enti.createTime != null">
                create_time=#{enti.createTime},
            </if>
            <if test="enti.userId != null">
                user_id=#{enti.userId},
            </if>
            <if test="enti.audit != null">
                audit=#{enti.audit},
            </if>
            <if test="enti.isDel != null">
                is_del=#{enti.isDel},
            </if>
            <if test="enti.title != null">
                title=#{enti.title},
            </if>
            <if test="enti.type != null">
                type=#{enti.type},
            </if>
            <if test="enti.expertId != null">
                expert_id=#{enti.expertId},
            </if>
            <if test="enti.isTop != null">
                is_top=#{enti.isTop},
            </if>
            <if test="enti.readCount != null">
                read_count=#{enti.readCount},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>