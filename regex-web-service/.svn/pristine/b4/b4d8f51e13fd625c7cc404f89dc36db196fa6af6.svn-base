package com.regex.web.dao.info;
import com.regex.web.common.dto.info.ExpertAnswerDTO;
import java.util.List;
public interface ExpertAnswerDAO{
	/**
	 * 获得ExpertAnswerDTO数据的总行数
	 * @return
	 */
    long getExpertAnswerDTORowCount();
	/**
	 * 获得ExpertAnswerDTO数据集合
	 * @return
	 */
    List<ExpertAnswerDTO> selectExpertAnswerDTO();
	/**
	 * 获得一个ExpertAnswerDTO对象,以参数ExpertAnswerDTO对象中不为空的属性作为条件进行查询
	 * @param obj
	 * @return
	 */
    ExpertAnswerDTO selectExpertAnswerDTOByObj(ExpertAnswerDTO obj);
	/**
	 * 通过ExpertAnswerDTO的id获得ExpertAnswerDTO对象
	 * @param id
	 * @return
	 */
    ExpertAnswerDTO selectExpertAnswerDTOById(Long id);
	/**
	 * 插入ExpertAnswerDTO到数据库,包括null值
	 * @param value
	 * @return
	 */
    int insertExpertAnswerDTO(ExpertAnswerDTO value);
	/**
	 * 插入ExpertAnswerDTO中属性值不为null的数据到数据库
	 * @param value
	 * @return
	 */
    int insertNonEmptyExpertAnswerDTO(ExpertAnswerDTO value);
	/**
	 * 批量插入ExpertAnswerDTO到数据库,包括null值
	 * @param value
	 * @return
	 */
    int insertExpertAnswerDTOByBatch(List<ExpertAnswerDTO> value);
	/**
	 * 通过ExpertAnswerDTO的id删除ExpertAnswerDTO
	 * @param id
	 * @return
	 */
    int deleteExpertAnswerDTOById(Long id);
	/**
	 * 通过ExpertAnswerDTO的id更新ExpertAnswerDTO中的数据,包括null值
	 * @param enti
	 * @return
	 */
    int updateExpertAnswerDTOById(ExpertAnswerDTO enti);
	/**
	 * 通过ExpertAnswerDTO的id更新ExpertAnswerDTO中属性不为null的数据
	 * @param enti
	 * @return
	 */
    int updateNonEmptyExpertAnswerDTOById(ExpertAnswerDTO enti);
}