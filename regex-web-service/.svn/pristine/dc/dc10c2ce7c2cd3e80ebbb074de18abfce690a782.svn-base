<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.regex.web.dao.sys.SysFhbuttonDao">
    <!-- SysFhbutton的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_SysFhbutton_Map" type="com.regex.web.common.dto.sys.SysFhbutton">
        <id column="FHBUTTON_ID" property="fhbuttonId" />
        <result column="QX_NAME" property="qxName" />
        <result column="BZ" property="bz" />
        <result column="NAME" property="name" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:sys_fhbutton的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="sys_fhbutton_Column">
        sys_fhbutton.FHBUTTON_ID as FHBUTTON_ID
        ,sys_fhbutton.QX_NAME as QX_NAME
        ,sys_fhbutton.BZ as BZ
        ,sys_fhbutton.NAME as NAME
    </sql>

    <!--获得类名为:SysFhbutton对应的数据库表的数据总行数 -->
    <select id="getSysFhbuttonRowCount" parameterType="com.regex.web.common.Assist" resultType="java.lang.Long">
        select count(FHBUTTON_ID) from sys_fhbutton
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:SysFhbutton对应数据库中表的数据集合 -->
    <select id="selectSysFhbutton" parameterType="com.regex.web.common.Assist"  resultMap="result_SysFhbutton_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="sys_fhbutton_Column" /> 
            </otherwise>
        </choose>
        from sys_fhbutton
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT FHBUTTON_ID as primary_key FROM sys_fhbutton
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=sys_fhbutton.FHBUTTON_ID
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个SysFhbutton对象,以参数SysFhbutton对象中不为空的属性作为条件进行查询-->
    <select id="selectSysFhbuttonByObj" parameterType="com.regex.web.common.dto.sys.SysFhbutton" resultMap="result_SysFhbutton_Map">
        select 
            <include refid="sys_fhbutton_Column" /> 
        from sys_fhbutton
        <where>
            <if test="name != null "> and sys_fhbutton.NAME = #{name}</if>
            <if test="bz != null "> and sys_fhbutton.BZ = #{bz}</if>
            <if test="qxName != null "> and sys_fhbutton.QX_NAME = #{qxName}</if>
            <if test="fhbuttonId != null "> and sys_fhbutton.FHBUTTON_ID = #{fhbuttonId}</if>
        </where>
    </select> 

    <!-- 通过SysFhbutton的id获得对应数据库中表的数据对象-->
    <select id="selectSysFhbuttonById" parameterType="java.lang.String" resultMap="result_SysFhbutton_Map">
        select 
            <include refid="sys_fhbutton_Column" /> 
        from sys_fhbutton
        where sys_fhbutton.FHBUTTON_ID = #{id}
    </select> 

    <!-- 将SysFhbutton插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertSysFhbutton" parameterType="com.regex.web.common.dto.sys.SysFhbutton">
        insert into sys_fhbutton(FHBUTTON_ID,QX_NAME,BZ,NAME) 
        values(#{fhbuttonId},#{qxName},#{bz},#{name})
    </insert>

    <!-- 将SysFhbutton中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptySysFhbutton" parameterType="com.regex.web.common.dto.sys.SysFhbutton">
        insert into sys_fhbutton
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="fhbuttonId != null">FHBUTTON_ID,</if>
            <if test="qxName != null">QX_NAME,</if>
            <if test="bz != null">BZ,</if>
            <if test="name != null">NAME,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="fhbuttonId != null"> #{fhbuttonId},</if>
            <if test="qxName != null"> #{qxName},</if>
            <if test="bz != null"> #{bz},</if>
            <if test="name != null"> #{name},</if>
        </trim>
    </insert>

    <!-- 将SysFhbutton批量插入到对应数据库的表中-->
    <insert id="insertSysFhbuttonByBatch" parameterType="ArrayList">
        insert into sys_fhbutton(FHBUTTON_ID,QX_NAME,BZ,NAME) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.fhbuttonId},#{item.qxName},#{item.bz},#{item.name})
        </foreach>
    </insert>

    <!-- 通过SysFhbutton的id将数据库表中对应的数据删除-->
    <delete id="deleteSysFhbuttonById" parameterType="java.lang.String">
        delete from sys_fhbutton
        where FHBUTTON_ID = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将SysFhbutton对应的数据库表的数据删除-->
    <delete id="deleteSysFhbutton" parameterType="com.regex.web.common.Assist">
        delete from sys_fhbutton
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过SysFhbutton的id将SysFhbutton的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateSysFhbuttonById" parameterType="com.regex.web.common.dto.sys.SysFhbutton">
        update sys_fhbutton set
            QX_NAME=#{qxName}
            ,BZ=#{bz}
            ,NAME=#{name}
        where FHBUTTON_ID=#{fhbuttonId}
    </update>

    <!-- 通过SysFhbutton的id将SysFhbutton中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptySysFhbuttonById" parameterType="com.regex.web.common.dto.sys.SysFhbutton">
        update sys_fhbutton
        <set>
            <if test="qxName != null">
                QX_NAME=#{qxName},
            </if>
            <if test="bz != null">
                BZ=#{bz},
            </if>
            <if test="name != null">
                NAME=#{name},
            </if>
        </set>
        where FHBUTTON_ID=#{fhbuttonId}
    </update>

    <!-- 通过辅助工具Assist中的条件将SysFhbutton中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateSysFhbutton" parameterType="map">
        update sys_fhbutton
        <set>
                FHBUTTON_ID=#{enti.fhbuttonId},
                QX_NAME=#{enti.qxName},
                BZ=#{enti.bz},
                NAME=#{enti.name},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将SysFhbutton中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptySysFhbutton" parameterType="map">
        update sys_fhbutton
        <set>
            <if test="enti.fhbuttonId != null">
                FHBUTTON_ID=#{enti.fhbuttonId},
            </if>
            <if test="enti.qxName != null">
                QX_NAME=#{enti.qxName},
            </if>
            <if test="enti.bz != null">
                BZ=#{enti.bz},
            </if>
            <if test="enti.name != null">
                NAME=#{enti.name},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>