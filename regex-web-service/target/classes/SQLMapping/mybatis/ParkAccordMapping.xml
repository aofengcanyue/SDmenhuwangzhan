<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.regex.web.dao.info.ParkAccordDAO">
    <!-- ParkAccordDTO的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_ParkAccordDTO_Map" type="com.regex.web.common.dto.info.ParkAccordDTO">
        <id column="id" property="id" />
        <result column="value_8" property="value8" />
        <result column="year" property="year" />
        <result column="value_6" property="value6" />
        <result column="value_7" property="value7" />
        <result column="park_id" property="parkId" />
        <result column="value_4" property="value4" />
        <result column="value_5" property="value5" />
        <result column="value_2" property="value2" />
        <result column="value_3" property="value3" />
        <result column="value_1" property="value1" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:t_park_accord的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="t_park_accord_Column">
        t_park_accord.id as id
        ,t_park_accord.value_8 as value_8
        ,t_park_accord.year as year
        ,t_park_accord.value_6 as value_6
        ,t_park_accord.value_7 as value_7
        ,t_park_accord.park_id as park_id
        ,t_park_accord.value_4 as value_4
        ,t_park_accord.value_5 as value_5
        ,t_park_accord.value_2 as value_2
        ,t_park_accord.value_3 as value_3
        ,t_park_accord.value_1 as value_1
    </sql>

    <!--获得类名为:ParkAccordDTO对应的数据库表的数据总行数 -->
    <select id="getParkAccordDTORowCount" parameterType="com.regex.web.common.Assist" resultType="java.lang.Long">
        select count(id) from t_park_accord
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:ParkAccordDTO对应数据库中表的数据集合 -->
    <select id="selectParkAccordDTO" parameterType="com.regex.web.common.Assist"  resultMap="result_ParkAccordDTO_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="t_park_accord_Column" /> 
            </otherwise>
        </choose>
        from t_park_accord
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM t_park_accord
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=t_park_accord.id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个ParkAccordDTO对象,以参数ParkAccordDTO对象中不为空的属性作为条件进行查询-->
    <select id="selectParkAccordDTOByObj" parameterType="com.regex.web.common.dto.info.ParkAccordDTO" resultMap="result_ParkAccordDTO_Map">
        select 
            <include refid="t_park_accord_Column" /> 
        from t_park_accord
        <where>
            <if test="value1 != null "> and t_park_accord.value_1 = #{value1}</if>
            <if test="value3 != null "> and t_park_accord.value_3 = #{value3}</if>
            <if test="value2 != null "> and t_park_accord.value_2 = #{value2}</if>
            <if test="value5 != null "> and t_park_accord.value_5 = #{value5}</if>
            <if test="value4 != null "> and t_park_accord.value_4 = #{value4}</if>
            <if test="parkId != null "> and t_park_accord.park_id = #{parkId}</if>
            <if test="value7 != null "> and t_park_accord.value_7 = #{value7}</if>
            <if test="value6 != null "> and t_park_accord.value_6 = #{value6}</if>
            <if test="year != null "> and t_park_accord.year = #{year}</if>
            <if test="value8 != null "> and t_park_accord.value_8 = #{value8}</if>
            <if test="id != null "> and t_park_accord.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过ParkAccordDTO的id获得对应数据库中表的数据对象-->
    <select id="selectParkAccordDTOById" parameterType="java.lang.Long" resultMap="result_ParkAccordDTO_Map">
        select 
            <include refid="t_park_accord_Column" /> 
        from t_park_accord
        where t_park_accord.id = #{id}
    </select> 

    <!-- 将ParkAccordDTO插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertParkAccordDTO" parameterType="com.regex.web.common.dto.info.ParkAccordDTO">
        insert into t_park_accord(id,value_8,year,value_6,value_7,park_id,value_4,value_5,value_2,value_3,value_1) 
        values(#{id},#{value8},#{year},#{value6},#{value7},#{parkId},#{value4},#{value5},#{value2},#{value3},#{value1})
    </insert>

    <!-- 将ParkAccordDTO中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyParkAccordDTO" parameterType="com.regex.web.common.dto.info.ParkAccordDTO">
        insert into t_park_accord
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="value8 != null">value_8,</if>
            <if test="year != null">year,</if>
            <if test="value6 != null">value_6,</if>
            <if test="value7 != null">value_7,</if>
            <if test="parkId != null">park_id,</if>
            <if test="value4 != null">value_4,</if>
            <if test="value5 != null">value_5,</if>
            <if test="value2 != null">value_2,</if>
            <if test="value3 != null">value_3,</if>
            <if test="value1 != null">value_1,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="value8 != null"> #{value8},</if>
            <if test="year != null"> #{year},</if>
            <if test="value6 != null"> #{value6},</if>
            <if test="value7 != null"> #{value7},</if>
            <if test="parkId != null"> #{parkId},</if>
            <if test="value4 != null"> #{value4},</if>
            <if test="value5 != null"> #{value5},</if>
            <if test="value2 != null"> #{value2},</if>
            <if test="value3 != null"> #{value3},</if>
            <if test="value1 != null"> #{value1},</if>
        </trim>
    </insert>

    <!-- 将ParkAccordDTO批量插入到对应数据库的表中-->
    <insert id="insertParkAccordDTOByBatch" parameterType="ArrayList">
        insert into t_park_accord(id,value_8,year,value_6,value_7,park_id,value_4,value_5,value_2,value_3,value_1) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},#{item.value8},#{item.year},#{item.value6},#{item.value7},#{item.parkId},#{item.value4},#{item.value5},#{item.value2},#{item.value3},#{item.value1})
        </foreach>
    </insert>

    <!-- 通过ParkAccordDTO的id将数据库表中对应的数据删除-->
    <delete id="deleteParkAccordDTOById" parameterType="java.lang.Long">
        delete from t_park_accord
        where id = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将ParkAccordDTO对应的数据库表的数据删除-->
    <delete id="deleteParkAccordDTO" parameterType="com.regex.web.common.Assist">
        delete from t_park_accord
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过ParkAccordDTO的id将ParkAccordDTO的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateParkAccordDTOById" parameterType="com.regex.web.common.dto.info.ParkAccordDTO">
        update t_park_accord set
            value_8=#{value8}
            ,year=#{year}
            ,value_6=#{value6}
            ,value_7=#{value7}
            ,park_id=#{parkId}
            ,value_4=#{value4}
            ,value_5=#{value5}
            ,value_2=#{value2}
            ,value_3=#{value3}
            ,value_1=#{value1}
        where id=#{id}
    </update>

    <!-- 通过ParkAccordDTO的id将ParkAccordDTO中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyParkAccordDTOById" parameterType="com.regex.web.common.dto.info.ParkAccordDTO">
        update t_park_accord
        <set>
            <if test="value8 != null">
                value_8=#{value8},
            </if>
            <if test="year != null">
                year=#{year},
            </if>
            <if test="value6 != null">
                value_6=#{value6},
            </if>
            <if test="value7 != null">
                value_7=#{value7},
            </if>
            <if test="parkId != null">
                park_id=#{parkId},
            </if>
            <if test="value4 != null">
                value_4=#{value4},
            </if>
            <if test="value5 != null">
                value_5=#{value5},
            </if>
            <if test="value2 != null">
                value_2=#{value2},
            </if>
            <if test="value3 != null">
                value_3=#{value3},
            </if>
            <if test="value1 != null">
                value_1=#{value1},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将ParkAccordDTO中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateParkAccordDTO" parameterType="map">
        update t_park_accord
        <set>
                id=#{enti.id},
                value_8=#{enti.value8},
                year=#{enti.year},
                value_6=#{enti.value6},
                value_7=#{enti.value7},
                park_id=#{enti.parkId},
                value_4=#{enti.value4},
                value_5=#{enti.value5},
                value_2=#{enti.value2},
                value_3=#{enti.value3},
                value_1=#{enti.value1},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将ParkAccordDTO中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyParkAccordDTO" parameterType="map">
        update t_park_accord
        <set>
            <if test="enti.id != null">
                id=#{enti.id},
            </if>
            <if test="enti.value8 != null">
                value_8=#{enti.value8},
            </if>
            <if test="enti.year != null">
                year=#{enti.year},
            </if>
            <if test="enti.value6 != null">
                value_6=#{enti.value6},
            </if>
            <if test="enti.value7 != null">
                value_7=#{enti.value7},
            </if>
            <if test="enti.parkId != null">
                park_id=#{enti.parkId},
            </if>
            <if test="enti.value4 != null">
                value_4=#{enti.value4},
            </if>
            <if test="enti.value5 != null">
                value_5=#{enti.value5},
            </if>
            <if test="enti.value2 != null">
                value_2=#{enti.value2},
            </if>
            <if test="enti.value3 != null">
                value_3=#{enti.value3},
            </if>
            <if test="enti.value1 != null">
                value_1=#{enti.value1},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>