<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.regex.web.dao.info.SupplyEvaluationResultDAO">
    <!-- SupplyEvaluationResultDTO的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_SupplyEvaluationResultDTO_Map" type="com.regex.web.common.dto.info.SupplyEvaluationResultDTO">
        <id column="id" property="id" />
        <result column="update_time" property="updateTime" />
        <result column="create_time" property="createTime" />
        <result column="year" property="year" />
        <result column="name" property="name" />
        <result column="is_del" property="isDel" />
        <result column="point" property="point" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:t_supply_evaluation_result的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="t_supply_evaluation_result_Column">
        t_supply_evaluation_result.id as id
        ,t_supply_evaluation_result.update_time as update_time
        ,t_supply_evaluation_result.create_time as create_time
        ,t_supply_evaluation_result.year as year
        ,t_supply_evaluation_result.name as name
        ,t_supply_evaluation_result.is_del as is_del
        ,t_supply_evaluation_result.point as point
    </sql>

    <!--获得类名为:SupplyEvaluationResultDTO对应的数据库表的数据总行数 -->
    <select id="getSupplyEvaluationResultDTORowCount" parameterType="com.regex.web.common.Assist" resultType="java.lang.Long">
        select count(id) from t_supply_evaluation_result
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:SupplyEvaluationResultDTO对应数据库中表的数据集合 -->
    <select id="selectSupplyEvaluationResultDTO" parameterType="com.regex.web.common.Assist"  resultMap="result_SupplyEvaluationResultDTO_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="t_supply_evaluation_result_Column" /> 
            </otherwise>
        </choose>
        from t_supply_evaluation_result
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM t_supply_evaluation_result
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=t_supply_evaluation_result.id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个SupplyEvaluationResultDTO对象,以参数SupplyEvaluationResultDTO对象中不为空的属性作为条件进行查询-->
    <select id="selectSupplyEvaluationResultDTOByObj" parameterType="com.regex.web.common.dto.info.SupplyEvaluationResultDTO" resultMap="result_SupplyEvaluationResultDTO_Map">
        select 
            <include refid="t_supply_evaluation_result_Column" /> 
        from t_supply_evaluation_result
        <where>
            <if test="point != null "> and t_supply_evaluation_result.point = #{point}</if>
            <if test="isDel != null "> and t_supply_evaluation_result.is_del = #{isDel}</if>
            <if test="name != null "> and t_supply_evaluation_result.name = #{name}</if>
            <if test="year != null "> and t_supply_evaluation_result.year = #{year}</if>
            <if test="createTime != null "> and t_supply_evaluation_result.create_time = #{createTime}</if>
            <if test="updateTime != null "> and t_supply_evaluation_result.update_time = #{updateTime}</if>
            <if test="id != null "> and t_supply_evaluation_result.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过SupplyEvaluationResultDTO的id获得对应数据库中表的数据对象-->
    <select id="selectSupplyEvaluationResultDTOById" parameterType="java.lang.Long" resultMap="result_SupplyEvaluationResultDTO_Map">
        select 
            <include refid="t_supply_evaluation_result_Column" /> 
        from t_supply_evaluation_result
        where t_supply_evaluation_result.id = #{id}
    </select> 

    <!-- 将SupplyEvaluationResultDTO插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertSupplyEvaluationResultDTO" parameterType="com.regex.web.common.dto.info.SupplyEvaluationResultDTO">
        insert into t_supply_evaluation_result(id,update_time,create_time,year,name,is_del,point) 
        values(#{id},#{updateTime},#{createTime},#{year},#{name},#{isDel},#{point})
    </insert>

    <!-- 将SupplyEvaluationResultDTO中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptySupplyEvaluationResultDTO" parameterType="com.regex.web.common.dto.info.SupplyEvaluationResultDTO">
        insert into t_supply_evaluation_result
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createTime != null">create_time,</if>
            <if test="year != null">year,</if>
            <if test="name != null">name,</if>
            <if test="isDel != null">is_del,</if>
            <if test="point != null">point,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="updateTime != null"> #{updateTime},</if>
            <if test="createTime != null"> #{createTime},</if>
            <if test="year != null"> #{year},</if>
            <if test="name != null"> #{name},</if>
            <if test="isDel != null"> #{isDel},</if>
            <if test="point != null"> #{point},</if>
        </trim>
    </insert>

    <!-- 将SupplyEvaluationResultDTO批量插入到对应数据库的表中-->
    <insert id="insertSupplyEvaluationResultDTOByBatch" parameterType="ArrayList">
        insert into t_supply_evaluation_result(id,update_time,create_time,year,name,is_del,point) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},#{item.updateTime},#{item.createTime},#{item.year},#{item.name},#{item.isDel},#{item.point})
        </foreach>
    </insert>

    <!-- 通过SupplyEvaluationResultDTO的id将数据库表中对应的数据删除-->
    <delete id="deleteSupplyEvaluationResultDTOById" parameterType="java.lang.Long">
        delete from t_supply_evaluation_result
        where id = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将SupplyEvaluationResultDTO对应的数据库表的数据删除-->
    <delete id="deleteSupplyEvaluationResultDTO" parameterType="com.regex.web.common.Assist">
        delete from t_supply_evaluation_result
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过SupplyEvaluationResultDTO的id将SupplyEvaluationResultDTO的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateSupplyEvaluationResultDTOById" parameterType="com.regex.web.common.dto.info.SupplyEvaluationResultDTO">
        update t_supply_evaluation_result set
            update_time=#{updateTime}
            ,create_time=#{createTime}
            ,year=#{year}
            ,name=#{name}
            ,is_del=#{isDel}
            ,point=#{point}
        where id=#{id}
    </update>

    <!-- 通过SupplyEvaluationResultDTO的id将SupplyEvaluationResultDTO中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptySupplyEvaluationResultDTOById" parameterType="com.regex.web.common.dto.info.SupplyEvaluationResultDTO">
        update t_supply_evaluation_result
        <set>
            <if test="updateTime != null">
                update_time=#{updateTime},
            </if>
            <if test="createTime != null">
                create_time=#{createTime},
            </if>
            <if test="year != null">
                year=#{year},
            </if>
            <if test="name != null">
                name=#{name},
            </if>
            <if test="isDel != null">
                is_del=#{isDel},
            </if>
            <if test="point != null">
                point=#{point},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将SupplyEvaluationResultDTO中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateSupplyEvaluationResultDTO" parameterType="map">
        update t_supply_evaluation_result
        <set>
                id=#{enti.id},
                update_time=#{enti.updateTime},
                create_time=#{enti.createTime},
                year=#{enti.year},
                name=#{enti.name},
                is_del=#{enti.isDel},
                point=#{enti.point},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将SupplyEvaluationResultDTO中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptySupplyEvaluationResultDTO" parameterType="map">
        update t_supply_evaluation_result
        <set>
            <if test="enti.id != null">
                id=#{enti.id},
            </if>
            <if test="enti.updateTime != null">
                update_time=#{enti.updateTime},
            </if>
            <if test="enti.createTime != null">
                create_time=#{enti.createTime},
            </if>
            <if test="enti.year != null">
                year=#{enti.year},
            </if>
            <if test="enti.name != null">
                name=#{enti.name},
            </if>
            <if test="enti.isDel != null">
                is_del=#{enti.isDel},
            </if>
            <if test="enti.point != null">
                point=#{enti.point},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>