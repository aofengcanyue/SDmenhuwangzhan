<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.regex.web.dao.sys.SysRoleFhbuttonDao">
    <!-- SysRoleFhbutton的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_SysRoleFhbutton_Map" type="com.regex.web.common.dto.sys.SysRoleFhbutton">
        <id column="RB_ID" property="rbId" />
        <result column="BUTTON_ID" property="buttonId" />
        <result column="ROLE_ID" property="roleId" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:sys_role_fhbutton的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="sys_role_fhbutton_Column">
        sys_role_fhbutton.RB_ID as RB_ID
        ,sys_role_fhbutton.BUTTON_ID as BUTTON_ID
        ,sys_role_fhbutton.ROLE_ID as ROLE_ID
    </sql>

    <!--获得类名为:SysRoleFhbutton对应的数据库表的数据总行数 -->
    <select id="getSysRoleFhbuttonRowCount" parameterType="com.regex.web.common.Assist" resultType="java.lang.Long">
        select count(RB_ID) from sys_role_fhbutton
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:SysRoleFhbutton对应数据库中表的数据集合 -->
    <select id="selectSysRoleFhbutton" parameterType="com.regex.web.common.Assist"  resultMap="result_SysRoleFhbutton_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="sys_role_fhbutton_Column" /> 
            </otherwise>
        </choose>
        from sys_role_fhbutton
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT RB_ID as primary_key FROM sys_role_fhbutton
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=sys_role_fhbutton.RB_ID
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个SysRoleFhbutton对象,以参数SysRoleFhbutton对象中不为空的属性作为条件进行查询-->
    <select id="selectSysRoleFhbuttonByObj" parameterType="com.regex.web.common.dto.sys.SysRoleFhbutton" resultMap="result_SysRoleFhbutton_Map">
        select 
            <include refid="sys_role_fhbutton_Column" /> 
        from sys_role_fhbutton
        <where>
            <if test="roleId != null "> and sys_role_fhbutton.ROLE_ID = #{roleId}</if>
            <if test="buttonId != null "> and sys_role_fhbutton.BUTTON_ID = #{buttonId}</if>
            <if test="rbId != null "> and sys_role_fhbutton.RB_ID = #{rbId}</if>
        </where>
    </select> 

    <!-- 通过SysRoleFhbutton的id获得对应数据库中表的数据对象-->
    <select id="selectSysRoleFhbuttonById" parameterType="java.lang.String" resultMap="result_SysRoleFhbutton_Map">
        select 
            <include refid="sys_role_fhbutton_Column" /> 
        from sys_role_fhbutton
        where sys_role_fhbutton.RB_ID = #{id}
    </select> 

    <!-- 将SysRoleFhbutton插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertSysRoleFhbutton" parameterType="com.regex.web.common.dto.sys.SysRoleFhbutton">
        insert into sys_role_fhbutton(RB_ID,BUTTON_ID,ROLE_ID) 
        values(#{rbId},#{buttonId},#{roleId})
    </insert>

    <!-- 将SysRoleFhbutton中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptySysRoleFhbutton" parameterType="com.regex.web.common.dto.sys.SysRoleFhbutton">
        insert into sys_role_fhbutton
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="rbId != null">RB_ID,</if>
            <if test="buttonId != null">BUTTON_ID,</if>
            <if test="roleId != null">ROLE_ID,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="rbId != null"> #{rbId},</if>
            <if test="buttonId != null"> #{buttonId},</if>
            <if test="roleId != null"> #{roleId},</if>
        </trim>
    </insert>

    <!-- 将SysRoleFhbutton批量插入到对应数据库的表中-->
    <insert id="insertSysRoleFhbuttonByBatch" parameterType="ArrayList">
        insert into sys_role_fhbutton(RB_ID,BUTTON_ID,ROLE_ID) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.rbId},#{item.buttonId},#{item.roleId})
        </foreach>
    </insert>

    <!-- 通过SysRoleFhbutton的id将数据库表中对应的数据删除-->
    <delete id="deleteSysRoleFhbuttonById" parameterType="java.lang.String">
        delete from sys_role_fhbutton
        where RB_ID = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将SysRoleFhbutton对应的数据库表的数据删除-->
    <delete id="deleteSysRoleFhbutton" parameterType="com.regex.web.common.Assist">
        delete from sys_role_fhbutton
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过SysRoleFhbutton的id将SysRoleFhbutton的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateSysRoleFhbuttonById" parameterType="com.regex.web.common.dto.sys.SysRoleFhbutton">
        update sys_role_fhbutton set
            BUTTON_ID=#{buttonId}
            ,ROLE_ID=#{roleId}
        where RB_ID=#{rbId}
    </update>

    <!-- 通过SysRoleFhbutton的id将SysRoleFhbutton中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptySysRoleFhbuttonById" parameterType="com.regex.web.common.dto.sys.SysRoleFhbutton">
        update sys_role_fhbutton
        <set>
            <if test="buttonId != null">
                BUTTON_ID=#{buttonId},
            </if>
            <if test="roleId != null">
                ROLE_ID=#{roleId},
            </if>
        </set>
        where RB_ID=#{rbId}
    </update>

    <!-- 通过辅助工具Assist中的条件将SysRoleFhbutton中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateSysRoleFhbutton" parameterType="map">
        update sys_role_fhbutton
        <set>
                RB_ID=#{enti.rbId},
                BUTTON_ID=#{enti.buttonId},
                ROLE_ID=#{enti.roleId},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将SysRoleFhbutton中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptySysRoleFhbutton" parameterType="map">
        update sys_role_fhbutton
        <set>
            <if test="enti.rbId != null">
                RB_ID=#{enti.rbId},
            </if>
            <if test="enti.buttonId != null">
                BUTTON_ID=#{enti.buttonId},
            </if>
            <if test="enti.roleId != null">
                ROLE_ID=#{enti.roleId},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>