package com.regex.web.controller.admin.sys;

import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.regex.web.common.Assist;
import com.regex.web.common.dto.info.EliminationDTO;
import com.regex.web.common.dto.info.EnergySaveDTO;
import com.regex.web.common.dto.info.ExpertDTO;
import com.regex.web.common.dto.info.SupplyDemandDTO;
import com.regex.web.common.utils.AjaxUtil;
import com.regex.web.controller.vo.PageVO;
import com.regex.web.service.info.IExpertService;

@Controller
@RequestMapping("sys/expert")
public class SysExpertController {
    
    @Autowired
    private IExpertService expertService;
    
    
    @RequestMapping("show")
    public String show() {
        return "admin/expert/show";
    }
    
    @RequestMapping(value = "getPage", method = RequestMethod.POST)
    @ResponseBody
    public void getPage(Model model, @ModelAttribute("assist") Assist assist, HttpServletResponse response, int sEcho,
            String columns, String iDisplayStart, String iDisplayLength, String sSearch) {
        
        assist.setRequires(Assist.andNeq("is_del", "1"));
        if(StringUtils.isEmpty(iDisplayLength)) {
            iDisplayLength = "10";
        }
        assist.setRowSize(Integer.parseInt(iDisplayLength));
        if(StringUtils.isEmpty(iDisplayStart)) {
            iDisplayStart = "0";
        }
        if(StringUtils.isNotEmpty(sSearch)) {
            assist.setRequires(Assist.customRequire("and model like concat('%',", sSearch, ",'%')"));
        }
        assist.setStartRow(Integer.parseInt(iDisplayStart));
        List<ExpertDTO> expertList = expertService.selectExpertDTO(assist);
        
        long totalCount = expertService.getExpertDTORowCount(assist);
        model.addAttribute("data", expertList);
        PageVO<ExpertDTO> mData = new PageVO<ExpertDTO>();
        mData.setAaData(expertList);
        mData.setsEcho(sEcho);
        mData.setiTotalRecords(totalCount);
        mData.setiTotalDisplayRecords(totalCount);
        AjaxUtil.ajaxJsonSucMessage(response, mData);
    }
    
    @RequestMapping("detial")
    public String detial(Long id, Model model) {
        try {
            ExpertDTO expertDTO = expertService.selectExpertDTOById(id);
            model.addAttribute("expertDTO", expertDTO);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return "admin/expert/detial";
    }
    
    @RequestMapping("input_{id}")
    public String input(Model model,@PathVariable("id")@ModelAttribute("id")Long id) {
        if (id != null && id > 0) {
            ExpertDTO expertDTO = expertService.selectExpertDTOById(id);
        model.addAttribute("expertDTO",expertDTO);
        }
        return "admin/expert/input";
    }
    
    /**
     * 
     * 功能描述: <br>
     * 新增/保存
     *
     * @param MemberDTO
     * @param response
     * @param request
     * @see [相关类/方法](可选)
     * @since [产品/模块版本](可选)
     */
    @RequestMapping("insert")
    public void save(ExpertDTO expertDTO, HttpServletResponse response,
            HttpServletRequest request) {
            int n = 0;
            if(expertDTO.getId() > 0 && expertDTO.getId()!=null ){
                expertDTO.setUpdateTime(new Date());
                n = expertService.updateNonEmptyExpertDTOById(expertDTO);
            }else {
                expertDTO.setCreateTime(new Date());
                expertDTO.setUpdateTime(new Date());
                expertDTO.setIsDel("0");
                n = expertService.insertExpertDTO(expertDTO) + 1;
            }
            AjaxUtil.ajaxJsonSucMessage(response, n);
    }
    
    /**
     * 
     * 功能描述: <br>
     * 删除
     *
     * @param id
     * @param response
     * @see [相关类/方法](可选)
     * @since [产品/模块版本](可选)
     */
    @RequestMapping("delete")
    public void del(Long id, HttpServletResponse response) {
        int n = 0;
        ExpertDTO expertDTO = expertService.selectExpertDTOById(id);
        expertDTO.setIsDel("1");
        n = expertService.updateNonEmptyExpertDTOById(expertDTO);
        AjaxUtil.ajaxJsonSucMessage(response, n);
    }
}
